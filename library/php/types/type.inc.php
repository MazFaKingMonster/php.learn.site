<?php
// Посмотреть что в переменной
echo "";   // Выведет значение переменной или результат работы функции, в виде текста!
//Работает не со всеми типами данных (можно привести к числу/строке/логике)

// Посмотреть есть ли что-то в переменной
isset($var);
// Отдаст true если есть или false если нет! По факту всегда true кроме случаев с NULL

// Посмотреть тип переменной
gettype($var);   // Отдает тип переменной

$integer = 25; // Число
$float = 1.25; // Число с точкой
$string = 'Строка 1';   // Строка (писать в скобках или апострофах)
// Все что в апострофах - выдаст как текст
// В скобках *поясниние что в скобках
$boolean = true; // Логические данные: true(истина "1") или false(ложь "0")

// Массив ебанный!!!
// Пиздец как заебался!

$variable = 10; // Переменная для примера ниже

// Пример массива!
$array = array(	'First' => 1 , 	// В массив можно писать что хочешь!
    // Записывать как "Ключ" и "Значение" и ","!
    // Запятая в конце записи ячейки на случей если записей несколько!

    'Second' => 'Строка', // Хоть строки!
    'Third' => true, // Хоть логику!
    'Fourth' => $variable, // Переменные!
    'Fourth_Note' => $Non_Existent_Variable, // Если их не существует - запишет "NULL"

    'Fiveth' => array('Something' => 'Stuff') 	// Даже ебанные массивы
    // (В качестве имени будет ключ
    // родительского )
    // И так до посинения)))
    // Главное не проебатся!

);

//Этой функцией можно посмотреть массив!
var_dump($array);

echo "<p>"; // <--- Этой хуйнёй можно сделать отступ между выплюнутой информацией т.к. браузер видит
// их как HTML теги!
// Я пока хз как иначе делать отступ, мб найду способ позже. Но тут переделывать не буду
// ;)

//Если надо посмотреть массив в массиве то прийдется использовать квадртные скобки!
var_dump($array['Fiveth']); // <--- Не забудь про точку с запятой в конце, придурок!!!

echo "<p>";

//Если надо посмотреть ЕЛЕМЕНТ МАССИВА который в МАССИВЕ, используй БОЛЬШЕ КВАДРАТНЫХ СКОБОК!!!
var_dump($array // Типо как оно вложено!

    //Елемент массива!
['Fiveth'] 	// Это один из ключей ! РОДИТЕЛЬСКОГО ! массива, он же и название
    // массива который внутри (ДОЧЕРНИЙ)!!!

    // Массив, который и есть елемент массива сверху!
['Something']); // Это один из ключей ! ДОЧЕРНЕГО! ! массива
// (тот, который внути родительского)

// И так до посинения...
// Главное не проебатся!

// Так можно просто смотреть значения елементов вписывая ключи от того что надо что бы не смотреть!
// На весь злоебучий массив.
?>