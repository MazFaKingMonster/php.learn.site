<?php
// Массив для примера "foreach"

$masSsS = $sSs_Array = array(  'First' => 'String',
    'Second' => 2,
    'Third' => '3',
    'Fourth' => true,
    'Fiveth' => array(  'Odin' => 1, // Массив в массиве)))
        'Dva' => 2,
        'Tri' => 3,
    ),
    'Sixth' => 'А тут нихуя!'
);

// Сам "foreach"

// Он работает только с массивом. В круглых скобках надо указывать как мы будем его перебирать!
// Сначала Имя массива, потом "as", потом переменная для закидывания в нее названия элемента,
// потом "=>", и переменная для закидывания в нее значения элемента!

foreach ($masSsS as $key => $value) {   // Можно без переменной для ключа массива ($key)!
    // Он и сам найдет значения с которыми надо работать!
    // foreach(*имя_массива as $value){...} <-- как-то так

    if(!is_array($value)){   // Сверху я сделал массив в массиве!
        // Ебать я шутник!
        // Ну хуле, прийдется проверять каждый элемент на наличие в нем массива!

        echo "  <p>Элемент: $key

        <br>Значение: $value";  // Это выплюнет если НЕ массив!

    }else{ // А если массив!!!

        echo "  <p>Нихуясе, это ебанный массив в массиве!
        <br>Вот он: <b>$key </b>
        <br>Хуярим его парни!";
        // Сначала мы выплюнем название этого Элемента, который стал массивом!

        foreach ($value as $key_2 => $value_2){ // А затем разберем и сам массив который в массиве!
            echo "  <p>Вот его элемент: <b>$key_2</b>
          <br>А вот значение: ($value_2)";
        }
        echo "  <p>Разобрались с ублюдком!
        <br>Идем дальше!";
    };

}

// Массив для примера редактирования массива через "foreach"!
$m = array(  '1-th' => 1,
    '2-nd' => 2,
    '3-rd' => 3,
    '4-th' => 4,
    '5-th' => 5,
);

// 	Перед этим мы выводили и проверяли, но если бы изменили - массив не перезаписался бы! Потому-что
// 	foreach создает копию массива чисто для себя...
//	А значит если нам надо изменить значения в елементах,
// 	прийдется в качестве переменной для значения элемента указывать "&" перед переменной
// 	Эта штука указывает на элемент массива.

foreach ($m as $k => &$v) { //<-- вот так!

    // Теперь когда я указал что переменная "$v" это ссылка на элемент массива,
    // любые изменения будут применятся непосредственно к массиву а не к его копии внутри цикла!

    echo "  <p>Перезаписываем значение: $k
      <br>Текущее значение: $v";

    $v += 2; // Прибавим 2 к значению!

    echo "<br>Новое значение: $v";
}


foreach ($m as $k => &$v) { // Тут я буду искать пятерку...

    if($v == 5){

        echo "   <p>$k:$v - <b>Это пятерка!</b>
            <br>Лови ее!
            <br><b>Умножим ее на 10!</b>";

        $v *= 10;

        echo "  <p>Хуяк! $k = $v";

        continue; // Можно так...

    };

    echo "<p>$k:$v - Это не пятерка!"; // А можно этот код запиздячить в "else{}"...
    echo "<br>Ищем пятерку дальше!";
}

// Считаем элементы!
$c_m = count($m);

// А тут буду смотреть что случилось с массивом после всего мракобесия!
echo "  <p>Вивод актуального значения массива: $m
    <br>Количество элементов: $c_m";

foreach ($m as $k => &$v) {
    echo "  <p>Элемент : $k
      <br>Значение - $v";
}
?>